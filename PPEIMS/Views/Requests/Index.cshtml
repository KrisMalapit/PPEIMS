@{
    ViewData["Title"] = "Index";
}
<style>
    td.details-control {
        /* Image in the first column to
                indicate expand*/
        background: url('images/more.png') no-repeat center;
        cursor: pointer;
    }

    tr.shown td.details-control {
        background: url('images/less.PNG') no-repeat center;
    }
    tr.noBorder td {
        border: 0;
    }

    .inpissued {
        border-color: lightgray;
        border-width: 0.5px !important;
    }

        .inpissued:focus {
            background-color: yellow;
        }
    .toast-middle-center {
        top: 25%;
        margin: 0 auto;
        left: 40%;
      
    }
</style>
<style>
    .error-input {
        border-color: hsl(0, 76%, 50%) !important;
    }

    .modal-md {
        width: 60% !important
    }
    .modal-lg {
        width: 80% !important
    }
    .modal-dialog {
        max-width: 100%;
        margin: 1.75rem auto;
    }

    #tblEmployee tr > *:nth-child(3), #tblEmployee tr > *:nth-child(4) {
        display: none;
    }
</style>
<link href="~/css/plugins/select2/select2-bootstrap.min.css" rel="stylesheet">


<div class="modal inmodal in " id="modalEmployee" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content animated fadeIn">
            <div class="modal-header">
                <h4 class="modal-title" id="modalSnapTitle">Employee Information </h4>
                <small class="font-bold">Assigned employees</small>
            </div>
            <div class="modal-body">
                <input id="SubDetailId" type="hidden" />
                <input id="TotalQty" type="hidden" />
                <h3 id="itemName"></h3>
                <br />
                <div class="form-group ">
                    <form id="frm">
                        <table id="tblEmployee" class="table table-striped table-no-bordered table-hover dataTable" style="width: 100%!important">
                            <thead>
                                <tr>
                                    <th>Code</th>
                                    <th>Name </th>
                                    <th>User Id </th>
                                    <th>Existing </th>
                                    <th>Issued Date</th>
                                    <th>Expiration Date</th>
                                </tr>
                            </thead>
                        </table>
                    </form>


                </div>
                <button id="btnSaveEmployee" onclick="saveEmployee();" class="btn btn-success">Save</button>
                <button id="btnSubDetailId" onclick="showmodal(this);" data-id="" class="btn btn-default">Close</button>


            </div>
        </div>
    </div>
</div>





<div class="modal inmodal in " id="modalItem" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content animated fadeIn">
            <div class="modal-header">
                <h4 class="modal-title" id="modalSnapTitle">Item Information</h4>
                <small class="font-bold">Modify details of this Item</small>
            </div>
            <div class="modal-body">
                <form id="frmItem">

                    <input id="DetailId" name="Id" value="0" type="hidden" />
                    <div class="form-group">
                        <script id="ITEMtemplate" type="text/template">
                            <td>
                                <select class="form-control input-sm cmbNo" name="no[]">
                                    <option>Select Item</option>
                                </select>
                            </td>
                            <td>
                                <input class="quantity form-control" type="text" placeholder="Qty" name="qty[]" required />
                            </td>
                            <td>
                                <input disabled class=" form-control inventory" type="text" placeholder="0" name="inventory[] " />
                            </td>
                            <td>
                                <select class="form-control input-sm cmbType" name="type[]">
                                    <option>New</option>
                                    <option>Replacement</option>
                                </select>
                            </td>
                            <td>
                                <input class="form-control remarks" type="text" placeholder="Remarks" name="remarks[]" />
                            </td>
                            <td>
                                <button class="remITEM btn btn-danger" type="button"><i class="glyphicon glyphicon-remove"></i></button>
                            </td>
                        </script>
                        <div class="row col-md-12"><h3>Request No :</h3><h3 style="padding-left:10px;" id="reqNo1">0</h3></div>
                        &nbsp;
                        <table class="table table-bordered table-hover" id="tblItem">
                            <thead>
                                <tr>

                                    <th width="35%">Item</th>
                                    <th width="10%">Qty</th>
                                    <th width="10%">Inventory</th>
                                    <th width="15%">Type</th>
                                    <th width="20%">Remarks</th>

                                    <th width="10%">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="p_Item">
                                <tr id="trAction">

                                    <td colspan="5"></td>

                                    <td>
                                        <button class="addFE btn btn-default" type="button"><i class="fa fa-plus"></i> </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                </form>

                @*<button id="btnSave" class="btn btn-success" onclick="saveItem();">Save</button>
        <button id="btnProceed" class="btn btn-primary" onclick="proceedApprover();">Proceed</button>
        <button data-dismiss="modal" class="btn btn-default">Close</button>*@

                <p>
                    @*<div class="row col-md-12">
                        <div class="divApproved">*@
                            <a href="#" onclick="saveItem();">
                                <i class="fa fa-check"></i>
                                <span class="email-text">&nbsp;Save</span>
                            </a>

                            <text> |&nbsp; </text>
                            <a href="#" onclick="submitItem();">
                                <i class="fa fa-check-square"></i>
                                <span class="email-text">&nbsp;Submit</span>
                            </a>

                            <text> |&nbsp; </text>
                        @*</div>
                        <div>*@
                            <a href="#" data-dismiss="modal">
                                <i class="fa fa-window-close"></i>
                                <span class="email-text">&nbsp;Close</span>
                            </a>
                        @*</div>*@
                    </div>
                   


                        
                </p>

            </div>
        </div>
    </div>
</div>


<div class="modal inmodal in " id="modalView" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content animated fadeIn">
            <div class="modal-header">
                <h4 class="modal-title" id="modalSnapTitle">Transaction Details </h4>
                <small class="font-bold">Assigned employees</small>
            </div>
            <div class="modal-body">
                <input id="SubDetailId" type="hidden" />
                <input id="TotalQty" type="hidden" />
                <div class="form-group ">
                    
                    <div class="row col-md-12"><h3>Request No :</h3><h3 style="padding-left:10px;" id="reqNo">0</h3></div>
                    &nbsp;
                    <form id="frm">
                        <table id="tableID" class="display table table-no-bordered dataTable"
                               style="width:100%">

                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Item</th>
                                    <th>Qty to Request</th>
                                    <th>Qty Issued</th>
                                    <th>Inventory</th>
                                    <th>Type</th>
                                    <th>Remarks</th>
                                    <th>Comment</th>
                                </tr>
                            </thead>

                        </table>
                    </form>


                </div>

                <p>

                    <div class="row col-md-12">
                        <div class="divApproved">
                            <a href="#" onclick="submitItem();">
                                <i class="fa fa-check"></i>
                                <span class="email-text">&nbsp;Approve</span>
                            </a>
                            <text> |&nbsp; </text>
                            <a href="#" onclick="disapproved();">
                                <i class="fa fa-crosshairs"></i>
                                <span class="save">&nbsp;Disapproved</span>
                            </a>
                            <text> |&nbsp; </text>
                        </div>
                        <div>
                            <a href="#" data-dismiss="modal">
                                <i class="fa fa-check-square"></i>
                                <span class="save">&nbsp;Close</span>
                            </a>
                        </div>
                    </div>


                   
                  




                </p>

            </div>
        </div>
    </div>
</div>



<div class="col-lg-12">

    <div class="ibox float-e-margins">
        <div class="ibox-content">
            <p>
                <a onclick="createRequest();">Create New</a>
            </p>


            <table id="tbl" class="table table-striped table-no-bordered table-hover dataTable" style="width: 100%!important">

                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Reference No</th>
                        <th>Created By</th>
                        <th>Status</th>
                        <th>Action</th>

                    </tr>
                    <tr>
                        <th>Date</th>
                        <th>Reference No</th>
                        <th>Created By</th>
                        <th>Status</th>
                        <th></th>

                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>Date</th>
                        <th>Reference No</th>
                        <th>Created By</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>

        </div>
    </div>
</div>
@*<script>

    /* Function for child row details*/
        function getChildRow(data) {
            // `data` is the data object for the row
            return '<table cellpadding="5" cellspacing="0"'
                + ' style="padding-left:50px;">' +
                '<tr>' +
                    '<td>Full name:</td>' +
                    '<td>' + data.name + '</td>' +
                '</tr>' +
                '<tr>' +
                '<td>Address in detail:</td>' +
                '<td>' + data.address + '</td>' +
                '</tr>' +
                '<tr>' +
                '<td>Extra details like ID:</td>' +
                '<td>' + data.employee_id + '</td>' +
                '</tr>' +
                '</table>';
        }

        $(document).ready(function () {

            /* Initialization of datatables */
            var table = $('#tableID').DataTable({
                "ajax": "nestedData.txt",
                "columns": [{
                    "className": 'details-control',
                    "orderable": true,
                    "data": null,
                    "defaultContent": ''
                },
                { "data": "name" },
                { "data": "designation" },
                { "data": "city" },
                { "data": "salary" }
                ],
                "order": [[1, 'asc']]
            });

            // Click events for expanding and
            // closing using up/down arrows
            $('#tableID tbody').on('click',
                'td.details-control', function () {

                    var tr = $(this).closest('tr');
                    var row = table.row(tr);

                    if (row.child.isShown()) {

                        // Closing the already opened row
                        row.child.hide();

                        // Removing class to hide
                        tr.removeClass('shown');
                    }
                    else {

                        // Show the child row for detail
                        // information
                        row.child(getChildRow(row.data())).show();

                        // To show details,add the below class
                        tr.addClass('shown');
                    }
                });
        });
    </script>*@


<script>
    var table = "";
    /* Function for child row details*/
    function getChildRow(data) {
        var tdRow = '';
        var tb = '<table cellpadding="5" cellspacing="0"'
            + ' style="">';

       


        for (let i = 0; i < data.length; i++) {
            tdRow += '<tr class="noBorder">' +
                '<td>Employee Name:</td>' +
                '<td>' + data[i].employeeName + '</td>' +
                '</tr>' +
                '<tr>' 
           } 
        return tb  + tdRow + '</table>';;
    }
    function loadDatatableView(id) {
  
        if ($.fn.DataTable.isDataTable('#tableID')) {
            $('#tableID').DataTable().destroy();

        }

        table = $('#tableID').DataTable({
            "ajax": "@Url.Action("getDataDetailsView")?id=" + id,
            createdRow: function (row, data, dataIndex) {
                $(row).find('td:eq(0)').attr('data-id', data['id']);
                $(row).find('.inpissued').attr('data-id', data['id']);
                if (data['documentStatus']==='Approved') {
                    $(row).find('.inpissued').attr('disabled', 'true');
                    $(row).find('.inpcomment').attr('disabled', 'true');
                    
                }
                $(row).find('.inpissued').attr('value', data['quantityIssued']);
            },
           
                "columnDefs": [
                    { "width": "30%", "targets": 1 },
                    { "width": "5%", "targets": 2 },
                    { "width": "5%", "targets": 3 },
                    { "width": "5%", "targets": 4 },
                    { "width": "5%", "targets": 5 },
                    { "width": "20%", "targets": 6 },
                    { "width": "30%", "targets": 7 }
                ]
            ,
            "columns": [{
                "className": 'details-control',
                "orderable": true,
                "data": null,
                "defaultContent": ''
            },
                { "data": "itemName" },
                { "data": "quantity" },
                { "data": undefined, "defaultContent": "<input onkeypress='return isNumberKey(event)' onBlur='saveChanges(this)' onfocus='this.select();' onmouseup='return false;' class='inpissued' style='direction:rtl;width:100%' data-type='qtyissued'>" },
                { "data": "inventory" },
                { "data": "type" },
                { "data": "remarks" },
                //{ "data": undefined, "defaultContent": "<input onkeypress='return isNumberKey(event)' onBlur='saveChanges(this)' onfocus='this.select();' onmouseup='return false;' class='inpcomment' style='direction:rtl;width:100%' data-type='comments'>" }
                {
                    data: "comments",
                    name: "Comments",
                    render: function (data, type, row) {
                        $comment = data==null ? "" : data;
                        return "<input onBlur='saveChanges(this)' onfocus='this.select();' onmouseup='return false;' class='inpcomment' style='direction:ltr;width:100%' data-type='comments' data-id='" + row['id'] + "' value='" + $comment+"'>";
                    }
                },
            ],
           
            "order": [[1, 'asc']]
        });
    }

    $(document).ready(function () {
        
      
        loadDatatableView(0);

      

        $('#tableID tbody').on('click',
            'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                $id = $(this).attr('data-id');
                //getdata
                $.ajax({
                    url: "@Url.Action("getEmployeesView")"
                    , method: "POST"
                    , data: { RequestId: $id}
                    , dataType: 'json'
                    , success: function (responsedata) {
                        if (responsedata.status == "success") {
                            if (row.child.isShown()) {
                                row.child.hide();
                                tr.removeClass('shown');
                            }
                            else {

                                row.child(getChildRow(responsedata.data)).show();
                                tr.addClass('shown');
                            }

                        } else {
                            toastr["error"](responsedata.message)
                            toastr.options = {
                                "closeButton": true
                            }
                        }
                    }
                })
                //end data
            });


    });
</script>










@*<script>
    function loadDatatableView(id) {
        var data = [];
         $.ajax({
                        url: "@Url.Action("getDataDetailsView")"
                            , method: "POST"
                            , dataType: 'json'
                            , data: { id: id}
                            , success: function (responsedata) {
                                if (responsedata.status == "success") {
                                    for (var i = 0; i < responsedata.data.length; i++) {
                                        var $id = responsedata.data[i].id;
                                        $actions =
                                            //'<a title="Edit" class="btn btn-white btn-bitbucket" href="' + linkEdit + '"><i class="fa fa-wrench"></i></a> ' +
                                            //'<a title="Details" class="btn btn-info btn-bitbucket" href="' + linkDetails + '"><i class="fa fa-list"></i></a> ';
                                            '<a title="Delete" class="btn btn-danger btn-bitbucket" onclick="deleteItem(' + $id + ')"><i class="fa fa-trash"></i></a>';
                                        data.push([
                                            responsedata.data[i].itemName,
                                            responsedata.data[i].quantity,
                                            responsedata.data[i].inventory,
                                            responsedata.data[i].type,
                                            responsedata.data[i].remarks,
                                            responsedata.data[i].id,
                                            ]
                                        );
                                    }
                                    if ($.fn.DataTable.isDataTable('#tableID')) {
                                        $('#tableID').DataTable().destroy();

                                    }

                                    var table = $('#tableID').DataTable({
                                        "data": data,

                                        'columnDefs': [
                                            {
                                                'targets': 0,
                                                'createdCell': function (td, cellData, rowData, row, col) {
                                                    $(td).attr('data-id', cellData[5]);
                                                }
                                            }
                                        ],
                                            "columns": [{
                                                "className": 'details-control',
                                                "orderable": true,
                                                "data": null,
                                                "defaultContent": ''
                                            },
                                            { "data": 0 },
                                            { "data": 1 },
                                            { "data": 2 },
                                            { "data": 3 },
                                            { "data": 4 },

                                                ],
                                            "order": [1, "asc"]
                                    });

                                } else {
                                   //swal("Error!" + responsedata.message, "Please try again", "error");
                                    toastr["error"](responsedata.message)
                                    toastr.options = {
                                        "closeButton": true,
                                        "showDuration": "3000",
                                    }
                                }

                            }
        });
    }
$(document).ready(function () {
        var table = $("#tableID").DataTable();
        $('#tableID tbody').on('click',
            'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                $id = $(this).attr('data-id');
                //getdata
                $.ajax({
                    url: "@Url.Action("getEmployeesView")"
                    , method: "POST"
                    , data: { RequestId: $id}
                    , dataType: 'json'
                    , success: function (responsedata) {
                        if (responsedata.status == "success") {
                            if (row.child.isShown()) {
                                row.child.hide();
                                tr.removeClass('shown');
                            }
                            else {

                                row.child(getChildRow(responsedata.data)).show();
                                tr.addClass('shown');
                            }

                        } else {
                            toastr["error"](responsedata.message)
                            toastr.options = {
                                "closeButton": true
                            }
                        }
                    }
                })
                //end data
            });
    });

    function getChildRow(data) {
        return '<table cellpadding="5" cellspacing="0"'
            + ' style="padding-left:50px;">' +
            '<tr>' +
            '<td>Full name:</td>' +
            '<td>' + data.employeeName + '</td>' +
            '</tr>' +

            '</table>';
    }

</script>*@






<script>
    var FEDiv = $('#p_Item');
    $(document).on('click', '.addFE', function () {
        var i = ($('#p_Item tr').length-1) + 1;
        var $tr = $('<tr>').append($('#ITEMtemplate').html());
        //if (i==1) {
        //    FEDiv.prepend($tr);
        //} else {
        //    $("#tblItem tbody:last-child").before($tr);
        //}

        $("#trAction").before($tr);
        initiateSelect2()



    })
    $(document).on('click', '.remITEM', function () {
        var i = $('#p_Item tr').length;
        if (i > 1) {
            $(this).closest('tr').remove();
        }
        return false;
    });


    $(document).on("change", ".cmbNo", function () {

        var x = this
        $.ajax({
            url: "@Url.Action("GetInventory")",
            method: "POST",
            dataType: "json",
            data: {
                'itemid': this.value
            }
            , success: function (responsedata) {

                if (responsedata.status == "success") {
                    $inv = responsedata.inv
                    $(x).closest('tr').find('.inventory').val($inv);
                } else {
                    console.log(responsedata.message)

                };
            }
        });
    });





    function initiateSelect2() {
        $(".cmbType").select2({
            dropdownParent: $('#modalItem .modal-content'),
            width: '100%',
            theme: 'bootstrap'
        });
        $(".cmbType").change(function () {

            if ($(this).val() === 'Replacement') {
               $(this).closest('tr').find('.remarks').prop('required',true);
            } else {
                $(this).closest('tr').find('.remarks').removeAttr('required');
                $(this).closest('tr').find('.remarks').removeClass('error-input');
            }
        });

        //$(document).on('change', '.cmbType', function () {

        //});

        $(".cmbNo").select2({
        dropdownParent: $('#modalItem .modal-content'),
        width: '100%',
        theme: 'bootstrap',
            ajax: {
                url: "@Url.Action("SearchItem")",
                dataType: 'json',
                delay: 2000,
                data: function (params) {
                    return {
                        q: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, page) {
                    return {
                        results: data.items,

                    };
                },

                cache: false
        },
        minimumInputLength: 2,
        });


    }
    function saveEmployee() {
        var arr = [];
        $rowSelected = 0;
        var strUser = '';
                table = $('#tblEmployee').DataTable();
                table.$('input[type="checkbox"]').each(function () {
                    if (this.checked) {
                        if (strUser != '') {
                            strUser += ",";
                        }


                        $itemid = $(this).closest('tr').find("td:eq(2)").text()
                        arr.push({ RequestDetailId: $("#SubDetailId").val(), UserId: $itemid });
                        strUser += $itemid;

                        $rowSelected += 1;
                    }
                })

        if ($("#TotalQty").val() != $rowSelected ) {
            toastr["error"]("Selected rows is not equal to quantity set")
            toastr.options = {
                "closeButton": true,
                "showDuration": "3000",
            }
            return false;
        }


                if (arr.length < 1) {
                    alert("No record selected");

                } else {





                    $.ajax({
                        url: "@Url.Action("SaveEmployee", "Requests")"
                        , method: "POST"
                        , data: { member: arr, userid: strUser}
                        , dataType: 'json'
                        , async: false
                        , success: function (responsedata) {
                            if (responsedata.status == "success") {

                                toastr["success"]("Item added", "<b>Success</b> ")





                            } else {

                                toastr["error"](responsedata.message)
                                toastr.options = {
                                    "closeButton": true,
                                    "showDuration": "3000",
                                }
                            }
                        }
                    })
        }

        @*$.ajax({
            url: "@Url.Action("SaveEmployee")",
            method: "POST",
            dataType: "json",
            data: {
                'UserId': data['id'],
                'RequestDetailId': $("#SubDetailId").val(),

            }
            , success: function (responsedata) {
                if (responsedata.status == "success") {
                    toastr["success"]("Data saved!", "<b>Success</b> ")
                    //loadDatatable();
                } else {
                    toastr["error"](responsedata.message)
                    toastr.options = {
                        "closeButton": true,
                        "showDuration": "3000",
                    }
                };
            }
        });*@
    }
    function saveItem() {
        var cnt = 0;
        var cntInv = 0;
        $('#frmItem').find('input').each(function () {
            if ($(this).prop('required')) {
                if (!$(this).val()) {
                    cnt = 1;
                    $(this).addClass("error-input");
                } else {
                    $(this).removeClass("error-input");
                }


                if ($(this).hasClass('quantity')) {

                    $currinv = $(this).closest('tr').find('.inventory').val()

                    if (parseInt($currinv) < parseInt($(this).val())) {
                        cntInv = 1;
                        $(this).addClass("error-input");
                    } else {
                        if ($(this).val()) {
                            $(this).removeClass("error-input");
                        }
                    }
                }



            }
        });

        if (cnt > 0) {
            toastr["error"]("Fill all required fields", "Error")
            toastr.options = {
                "closeButton": true,
                "showDuration": "3000",
            }
            return false;
        }
        if (cntInv > 0) {
            toastr["error"]("Invalid quantity", "Error")
            toastr.options = {
                "closeButton": true,
                "showDuration": "3000",
            }
            return false;
        }


        var data = $("#frmItem").serializeArray();

        $.ajax({
            url: "@Url.Action("saveRequest")"
            , method: "POST"
            , data: data
            , dataType: 'json'
             , success: function (responsedata) {
                if (responsedata.status == "success") {
                    toastr["success"]("Form saved!", "<b>Success</b> ")
                    console.log(responsedata);
                    $("#DetailId").val(responsedata.refid);
                    document.getElementById('reqNo1').innerHTML = responsedata.refno; 
                   
                    loadDatatable();
                    reloadtable(responsedata.refid);

                } else {
                    toastr["error"](responsedata.message)
                    toastr.options = {
                        "closeButton": true
                    }
                }
            }
        })


    }
    function disapproved() {
        if (!confirm("This document will be tag as disapproved. Continue?")) {
            return false;
        }
      
        $.ajax({
            url: "@Url.Action("disapproveRequest")"
            , method: "POST"
            , data: { refid: $("#DetailId").val() }
            , dataType: 'json'
             , success: function (responsedata) {
                if (responsedata.status == "success") {
                    toastr["success"]("Form submitted!", "<b>Success</b> ")
                  
                    loadDatatable();
                   

                } else {
                    toastr["error"](responsedata.message)
                    toastr.options = {
                        "closeButton": true
                    }
                }
            }
        })


    }
    function submitItem() {
        if (!confirm("Do you want to submit this document for approving?")) {
            return false;
        }
      
        $.ajax({
            url: "@Url.Action("submitRequest")"
            , method: "POST"
            , data: { refid: $("#DetailId").val() }
            , dataType: 'json'
             , success: function (responsedata) {
                if (responsedata.status == "success") {
                    toastr["success"]("Form submitted!", "<b>Success</b> ")
                  
                    loadDatatable();
                   

                } else {
                    toastr["error"](responsedata.message)
                    toastr.options = {
                        "closeButton": true
                    }
                }
            }
        })


    }
    $(function () {

        $('#tbl thead tr:eq(1) th').each(function () {

            var title = $(this).text();
            if (title == "") {

            } else {
                $(this).html('<input type="search" class="form-control form-control-sm" placeholder="Search ' + title + '" />');
            }
        });
        initiateSelect2();
        loadDatatable();



    })

    function loadDatatable() {


        if ($.fn.DataTable.isDataTable('#tbl')) {
            $('#tbl').DataTable().destroy();
        }


        var table = $("#tbl").DataTable({
            "processing": true,
            "serverSide": true,
            "searching": true,
            "fixedHeader": true,
            "ajax": {
                "url": "@Url.Action("getData")",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
               {
                    data: "createdDate",
                    name: "CreatedDate",
                    render: function (data, type, row) {
                        return moment(data).format("MM-DD-YYYY");
                    }
                },
                //{ "data": "createdDate", "name": "CreatedDate", "autoWidth": true },
                { "data": "referenceNo", "name": "ReferenceNo", "autoWidth": true },
                { "data": "createdBy", "name": "CreatedBy", "autoWidth": true },
                { "data": "documentStatus", "name": "DocumentStatus", "autoWidth": true },


                {

                    render: function (data, type, row) {
                        $actions = "";
                        if (row.documentStatus == "Approved") {
                            
                            $actions = "<a title='View' data-docstat='" + row.documentStatus +
                            "' data-ref=" + row.referenceNo + " data-id=" + row.id + " onclick='showmodalView(this);'>View</a>";

                        } else {
                            $actions =
                                "<a title='Edit' data-docstat='" + row.documentStatus + "' data-ref=" + row.referenceNo + " data-id=" + row.id + " onclick='showmodal(this);'>Edit</a>&nbsp;";
                            $actions = '@User.Identity.GetRoleName()' == 'User' ? $actions += '' : "<a title='View' data-docstat='" + row.documentStatus +
                            "' data-ref=" + row.referenceNo + " data-id=" + row.id + " onclick='showmodalView(this);'>View</a>";

                        }

                       
                        return $actions;
                    }
                }


            ]

            , "order": [[1, "desc"]]


        });




        $('#tbl input').on('keyup change', function (e) {

            var keyCode = e.keyCode
            if (keyCode >= 9 && keyCode <= 27) {

            } else {
                searchFunction(this);
            }
        });
        function searchFunction(e) {

            delay(function () {
                console.log(e);
                table.column($(e).parent().index() + ':visible')
                    .search(e.value)
                    .draw();
            }, 1000);
        }
        $("#tbl_filter").hide();
    }

    var delay = (function () {
        var timer = 0;
        return function (callback, ms) {
            clearTimeout(timer);
            timer = setTimeout(callback, ms);
        };
    })();
    function createRequest() {

        $('#DetailId').val(0);
        document.getElementById('reqNo1').innerHTML = "0";
        if ($('#tblItem tr').length > 2) {
            $('#p_Item > tr').remove();
            $trr =
                '<td colspan="4"></td>'


            $tdCtr = '<td><button class="addFE btn btn-default" type = "button"><i class="fa fa-plus"></i></button></td>'


                $trr = $trr + $tdCtr;
            var $tr = $('<tr id="trAction">').append($trr);
            FEDiv.append($tr);
            initiateSelect2();
        };





        $('#modalItem').modal('show');
    }
    function showmodal(obj) {
        $id = $(obj).attr('data-id');
        $ref = $(obj).attr('data-ref');
       

        

        if (typeof $ref == 'undefined') {
            
        } else {
            document.getElementById('reqNo1').innerHTML = $(obj).attr('data-ref');
        }
        
      
        
        $("#DetailId").val($id);

        $('#modalEmployee').modal('hide');
        $('#modalItem').modal('show');
        reloadtable($id);


         



    }
    function showmodalView(obj) {
       
        $id = $(obj).attr('data-id');
        document.getElementById('reqNo').innerHTML = $(obj).attr('data-ref');
        $("#DetailId").val($id);
        loadDatatableView($id);
        $('#modalView').modal('show');


        $stat = $(obj).attr('data-docstat')
        if ($stat == "Approved") {
            
            $('.divApproved').hide()
           
            
        } else {
            $('.divApproved').show()

        }
    }
    
    function showcomment(obj) {
        //console.log(obj);
        $comment = $(obj).attr('data-comment');
        $item = $(obj).attr('data-item');
        //toastr["warning"]($comment, "<b>Comment</b> ")
        toastr.options = {
            timeOut: 0,
            extendedTimeOut: 0,
            "closeButton": true
            , "positionClass": "toast-middle-center"

        };
        toastr.warning($comment, "<b>Comment for '" + $item + "' </b> ")
        
        //alert($comment);
    }
    function showmodaldetail(obj) {
        console.log(obj);
        $id = $(obj).attr('data-id');
        $itemid = $(obj).attr('data-item');
        $('#SubDetailId').val($id);
        $('#btnSubDetailId').attr('data-id', $("#DetailId").val());
        $('#modalItem').modal('hide');

        $totalqty = $(obj).closest('tr').find('input').val();
        loadEmployees($id, $itemid);
        $('#TotalQty').val($totalqty);
        $('#itemName').html("Item Name : " + $(obj).attr('data-itemname'));
        
        $('#modalEmployee').modal('show');



    }
    function reloadtableView(_id) {
        console.log('aa');
        $.ajax({
            url: "@Url.Action("getDataDetails")"
            , method: "POST"
            , dataType: 'json'
            , data: { id: _id }
            , async: false
            , success: function (responsedata) {
                //console.log(responsedata);
                var $trr = '';
                $('#p_Item > tr').remove();
                if (responsedata.data.length > 0) {
                    //document.getElementById('reqNo1').innerHTML = responsedata.data.referenceNo; 
                    $lastnum = 1;

                    for (var i = 0; i < responsedata.data.length; i++) {
                        $req = '';
                        $rem = '';
                        if (responsedata.data[i].type == "Replacement") {
                            $req = 'required';
                        }

                        //if (!responsedata.data[i].remarks) {
                        //    $rem = responsedata.data[i].remarks;
                        //}
                        var $rem = responsedata.data[i].remarks == null ? "" : responsedata.data[i].remarks;

                        $trr =
                        '<td  width="35%"><select class="form-control input-sm cmbNo" id=cmbNo' + i + ' name="no[]"><option>Select Item</option></select></td>' +
                        '<td  width="10%"><input class="quantity form-control" type="text" placeholder="Qty" name="qty[]" required value="' + responsedata.data[i].quantity + '"/></td>' +
                        '<td  width="10%"><input class=" form-control inventory" type="text" placeholder="Inventory" name="inventory[]" disabled value="0"/></td>' +
                        '<td  width="15%">' +
                            '<select class="form-control input-sm cmbType" id=cmbType' + i + ' name="type[]">' +
                            '<option>New</option>' +
                            '<option>Replacement</option>' +
                            '</select></td>' +
                        '<td  width="20%"><input ' + $req + ' class="remarks form-control" type="text" placeholder="Remarks" name="remarks[]"  value="' + $rem + '"/></td>'


                        var $act = "<a title='Details' data-itemname='" + responsedata.data[i].itemName + "' data-item=" + responsedata.data[i].itemId + " data-id=" + responsedata.data[i].id + " class='btn btn-info btn-bitbucket' onclick='showmodaldetail(this);' href='#'><i class='fa fa-list'></i></a>&nbsp;" +
                            "<a title='Delete' class='btn btn-danger btn-bitbucket remITEM' href='#'><i class='fa fa-remove'></i></a>";
                        
                        $act += responsedata.data[i].comments ? "<a title='Comments' data-item='" + responsedata.data[i].itemName + "' data-comment='" + responsedata.data[i].comments + "'  class='btn btn-warning btn-bitbucket comItem' onclick='showcomment(this);' href='#'><i class='fa fa-comments'></i></a>" : "";



                        $tdCtr =
                            
                            '<td>' + $act +
                            '</td>'

                        $trr = $trr + $tdCtr;
                        var $tr = $('<tr>').append($trr);
                        FEDiv.append($tr);

                        //Item
                        $('#cmbNo' + i).append(new Option("", ""));
                        $('#cmbNo' + i).append(new Option(responsedata.data[i].itemName, responsedata.data[i].itemId));
                        $('#cmbNo' + i).select2({
                            dropdownParent: $('#modalItem .modal-content'),
                            width: '100%',
                            theme: 'bootstrap',
                            ajax: {
                                url: "@Url.Action("SearchItem")",
                                dataType: 'json',
                                delay: 2000,
                                data: function (params) {
                                    return {
                                        q: params.term, // search term
                                        page: params.page
                                    };
                                },
                                processResults: function (data, page) {
                                    return {
                                        results: data.items,

                                    };
                                },

                                cache: false
                            },

                            minimumInputLength: 2,

                        }).val(responsedata.data[i].itemId).trigger('change');


                        $lastnum++;


                        $('#cmbType' + i).val(responsedata.data[i].type).trigger('change');
                    }


                    $trr =
                        '<td colspan="5"></td>'
                    $tdCtr = '<td><button class="addFE btn btn-default" type = "button"><i class="fa fa-plus"></i></button></td>'
                    $trr = $trr + $tdCtr;
                    var $tr = $('<tr id="trAction">').append($trr);
                    FEDiv.append($tr);



                } else {
                    document.getElementById('reqNo1').innerHTML = "0";
                    //var i = $('#p_Item tr').length + 1;

                    //var x =
                    //    '<td>' +
                    //    '<select class="form-control input-sm cmbNo" name="no[]"><option>Select Item</option></select>' +
                    //    '</td>' +
                    //    '<td>' +
                    //    '<select class="form-control input-sm cmbComponent" name="component[]"><option>Select Component</option></select>' +
                    //    '</td>' +
                    //    '<td><input class=" form-control" type="text" placeholder="Volume / Qty" name="volume[]" required /></td>' +
                    //    '<td>' +
                    //    '<button class="addFE btn btn-default" type="button"><i class="fa fa-plus"></i> </button>' +
                    //    '</td>';
                    //var $tr = $('<tr>').append(x);
                    //FEDiv.append($tr);
                    //initiateSelect2();
                    $trr =
                        '<td colspan="5"></td>'
                    $tdCtr = '<td><button class="addFE btn btn-default" type = "button"><i class="fa fa-plus"></i></button></td>'
                    $trr = $trr + $tdCtr;
                    var $tr = $('<tr id="trAction">').append($trr);
                    FEDiv.append($tr);

                }
                initiateSelect2();
            }
        })
    }
    function saveChanges(x) {

       


            if ($(x).attr('value') == $(x).val()) {
                return false;
            }

            //var dataX = {};
            //dataX[0] = x;

        var qtyReq = $(x).closest('tr').find('td:eq(2)').html();

        
        if (parseInt($(x).val()) > parseInt(qtyReq)) {
            toastr["error"]("Invalid quantity issued")
            toastr.options = {
                "closeButton": true
            }

            $(x).val($(x).attr('value'))
            return false;
        }



            $.ajax({
                url: "@Url.Action("saveQtyIssued")"
                , method: "POST"
                , data: { id: $(x).attr('data-id'), qty: $(x).val(), type: $(x).attr('data-type'), comment: $(x).val()}
                , dataType: 'json'
                , success: function (responsedata) {
                        if (responsedata.status == "success") {
                            toastr["success"]("Qty saved!", "<b>Success</b> ")
                            

                        } else {
                            toastr["error"](responsedata.message)
                            toastr.options = {
                                "closeButton": true
                            }
                        }
                     }
                 })

        }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function reloadtable(_id) {
        console.log('dd');
        $.ajax({
            url: "@Url.Action("getDataDetails")"
            , method: "POST"
            , dataType: 'json'
            , data: { id: _id }
            , async: false
            , success: function (responsedata) {
                //console.log(responsedata);
                
                //document.getElementById('reqNo1').innerHTML = "dasdasd";
                var $trr = '';
                $('#p_Item > tr').remove();
                if (responsedata.data.length > 0) {
                    $lastnum = 1;
                    document.getElementById('reqNo1').innerHTML = responsedata.data[0].referenceNo;
                    for (var i = 0; i < responsedata.data.length; i++) {
                        $req = '';
                        $rem = '';
                        if (responsedata.data[i].type == "Replacement") {
                            $req = 'required';
                        }

                        //if (!responsedata.data[i].remarks) {
                        //    $rem = responsedata.data[i].remarks;
                        //}
                        var $rem = responsedata.data[i].remarks == null ? "" : responsedata.data[i].remarks;

                        $trr =
                        '<td  width="35%"><select class="form-control input-sm cmbNo" id=cmbNo' + i + ' name="no[]"><option>Select Item</option></select></td>' +
                        '<td  width="10%"><input class="quantity form-control" type="text" placeholder="Qty" name="qty[]" required value="' + responsedata.data[i].quantity + '"/></td>' +
                        '<td  width="10%"><input class=" form-control inventory" type="text" placeholder="Inventory" name="inventory[]" disabled value="0"/></td>' +
                        '<td  width="15%">' +
                            '<select class="form-control input-sm cmbType" id=cmbType' + i + ' name="type[]">' +
                            '<option>New</option>' +
                            '<option>Replacement</option>' +
                            '</select></td>' +
                        '<td  width="20%"><input ' + $req + ' class="remarks form-control" type="text" placeholder="Remarks" name="remarks[]"  value="' + $rem + '"/></td>'

                       
                       
                        var $act = "<a title='Details' data-itemname='" + responsedata.data[i].itemName + "' data-item=" + responsedata.data[i].itemId + " data-id=" + responsedata.data[i].id + " class='btn btn-info btn-bitbucket' onclick='showmodaldetail(this);' href='#'><i class='fa fa-list'></i></a>&nbsp;" +
                            "<a title='Delete' class='btn btn-danger btn-bitbucket remITEM' href='#'><i class='fa fa-remove'></i></a>";

                        $act += responsedata.data[i].comments ? "&nbsp;<a title='Comments' data-item='" + responsedata.data[i].itemName + "' data-comment='" + responsedata.data[i].comments + "' class='btn btn-warning btn-bitbucket comItem' onclick='showcomment(this);' href='#'><i class='fa fa-comments'></i></a>" : "";


                        $tdCtr =

                            '<td>' + $act +
                            '</td>'


                        $trr = $trr + $tdCtr;
                        var $tr = $('<tr>').append($trr);
                        FEDiv.append($tr);

                        //Item
                        $('#cmbNo' + i).append(new Option("", ""));
                        $('#cmbNo' + i).append(new Option(responsedata.data[i].itemName, responsedata.data[i].itemId));
                        $('#cmbNo' + i).select2({
                            dropdownParent: $('#modalItem .modal-content'),
                            width: '100%',
                            theme: 'bootstrap',
                            ajax: {
                                url: "@Url.Action("SearchItem")",
                                dataType: 'json',
                                delay: 2000,
                                data: function (params) {
                                    return {
                                        q: params.term, // search term
                                        page: params.page
                                    };
                                },
                                processResults: function (data, page) {
                                    return {
                                        results: data.items,

                                    };
                                },

                                cache: false
                            },

                            minimumInputLength: 2,

                        }).val(responsedata.data[i].itemId).trigger('change');


                        $lastnum++;


                        $('#cmbType' + i).val(responsedata.data[i].type).trigger('change');
                    }


                    $trr =
                        '<td colspan="5"></td>'
                    $tdCtr = '<td><button class="addFE btn btn-default" type = "button"><i class="fa fa-plus"></i></button></td>'
                    $trr = $trr + $tdCtr;
                    var $tr = $('<tr id="trAction">').append($trr);
                    FEDiv.append($tr);



                } else {

                    //var i = $('#p_Item tr').length + 1;

                    //var x =
                    //    '<td>' +
                    //    '<select class="form-control input-sm cmbNo" name="no[]"><option>Select Item</option></select>' +
                    //    '</td>' +
                    //    '<td>' +
                    //    '<select class="form-control input-sm cmbComponent" name="component[]"><option>Select Component</option></select>' +
                    //    '</td>' +
                    //    '<td><input class=" form-control" type="text" placeholder="Volume / Qty" name="volume[]" required /></td>' +
                    //    '<td>' +
                    //    '<button class="addFE btn btn-default" type="button"><i class="fa fa-plus"></i> </button>' +
                    //    '</td>';
                    //var $tr = $('<tr>').append(x);
                    //FEDiv.append($tr);
                    //initiateSelect2();
                    $trr =
                        '<td colspan="5"></td>'
                    $tdCtr = '<td><button class="addFE btn btn-default" type = "button"><i class="fa fa-plus"></i></button></td>'
                    $trr = $trr + $tdCtr;
                    var $tr = $('<tr id="trAction">').append($trr);
                    FEDiv.append($tr);

                }
                initiateSelect2();
            }
        })
    }
    function loadEmployees(id,itemid) {

       var data = [];

         $.ajax({
                        url: "@Url.Action("getEmployees", "Requests")"
                            , method: "POST"
                            , dataType: 'json'
                            , data: { RequestId: id,itemid : itemid}
                            , success: function (responsedata) {
                                console.log(responsedata);
                                if (responsedata.status == "success") {

                                    for (var i = 0; i < responsedata.data.length; i++) {

                                        var $id = responsedata.data[i].id;

                                        $issuedDate = moment(responsedata.data[i].issuedDate).format("MM/DD/YYYY") == "01/01/1900" ? "" : moment(responsedata.data[i].issuedDate).format("MM/DD/YYYY");
                                        $expirationDate = ""
                                        if ($issuedDate!= "") {
                                            var dt = new Date(responsedata.data[i].issuedDate);
                                            dt.setMonth(dt.getMonth() + responsedata.data[i].months);
                                            $expirationDate =  moment(dt).format("MM/DD/YYYY")
                                        } 

                                        $actions =
                                            //'<a title="Edit" class="btn btn-white btn-bitbucket" href="' + linkEdit + '"><i class="fa fa-wrench"></i></a> ' +
                                            //'<a title="Details" class="btn btn-info btn-bitbucket" href="' + linkDetails + '"><i class="fa fa-list"></i></a> ';
                                            '<a title="Delete" class="btn btn-danger btn-bitbucket" onclick="deleteItem(' + $id + ')"><i class="fa fa-trash"></i></a>';
                                        data.push([
                                            responsedata.data[i].id,
                                            responsedata.data[i].employeeName,
                                            responsedata.data[i].id,
                                            responsedata.data[i].isExisting,
                                            $issuedDate ,
                                            
                                            $expirationDate

                                            ]
                                        );

                                    }


                                    if ($.fn.DataTable.isDataTable('#tblEmployee')) {
                                        $('#tblEmployee').DataTable().destroy();

                                    }




                                    var table = $('#tblEmployee').DataTable({
                                        "data": data,
                                        "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                                        "columnDefs": [
                                            {
                                                'targets': 0,
                                                'orderable': false,
                                                'checkboxes': {
                                                    'selectRow': true
                                                }
                                            },


                                        ],
                                        'select': {
                                            'style': 'multi'
                                        },
                                        order: [1, 'asc'],
                                    });



                                    //var datas = table.rows().data();
                                    //datas.each(function (value, index) {
                                    //    console.log(`For index ${index}, data value is ${value[3]}`);
                                    //});


                                    table.$('input[type="checkbox"]').each(function () {
                                        var isexist = $(this).closest('tr').find("td:eq(3)").text();;

                                        if (isexist == '1') {
                                            $(this).prop('checked', true);

                                        }

                                    });



                                } else {
                                   swal("Error!" + responsedata.message, "Please try again", "error");
                                }

                            }
        });




    }
    //$('#tblEmployee-select-all').on('click', function () {
    //    table = $('#tblEmployee').DataTable();
    //    // Check/uncheck all checkboxes in the table
    //    var rows = table.rows({ 'search': 'applied' }).nodes();
    //    $('input[type="checkbox"]', rows).prop('checked', this.checked);



    //});
    //// Handle click on checkbox to set state of "Select all" control
    //$('#tblEmployee tbody').on('change', 'input[type="checkbox"]', function () {
    //    // If checkbox is not checked
    //    if (!this.checked) {
    //        var el = $('#tblEmployee-select-all').get(0);
    //        // If "Select all" control is checked and has 'indeterminate' property
    //        if (el && el.checked && ('indeterminate' in el)) {
    //            // Set visual state of "Select all" control
    //            // as 'indeterminate'
    //            el.indeterminate = true;
    //        }
    //    }

    //});

</script>